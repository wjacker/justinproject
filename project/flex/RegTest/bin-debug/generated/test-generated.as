
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      test
 *  Source:     C:\Documents and Settings\Justin wang\Adobe Flash Builder 4\RegTest\src\test.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.03.14 10:44:33 GMT+08:00
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.external.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.mx_internal;
import mx.events.FlexEvent;
import mx.filters.*;
import mx.styles.*;
import spark.components.Application;


[Frame(extraClass="_test_FlexInit")]

[Frame(factoryClass="_test_mx_managers_SystemManager")]


//  begin class def
public class test
    extends spark.components.Application
{

    //  instance variables

    //  type-import dummies



    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function test()
    {
        super();





        // layer initializers

       
        // properties
        this.minWidth = 955;
        this.minHeight = 600;


        // events
        this.addEventListener("creationComplete", ___test_Application1_creationComplete);












    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_test_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {


        super.initialize();
    }


    //  scripts
    //  <Script>, line 9 - 58

            import mx.events.BrowserChangeEvent;
            import mx.managers.BrowserManager;
            import mx.managers.IBrowserManager;
            private var browserManager:IBrowserManager;
            private function init():void
            {
                var s:String = "a+b,min(c+d,e,max(1+2,3)),d"
                var sArr:Array = s.match(/[^,()]*[,()]|[^,()]$/g);

                var resultArr:Array = new Array();
                var count:int = 0;
                var tempStr:String = "";
                var str:String;
                for(var i:int = 0; i < sArr.length; i++)
                {
                    str = sArr[i];
                    if(str.length > 0)
                    {
                        tempStr += str;
                        if(str.charAt(str.length - 1) == "(")
                        {
                            count++;
                        }
                        else if(str.charAt(str.length - 1) == ")")
                        {
                            count--;
                        }
                        else
                        {
                            if(count == 0)
                            {
                                if(tempStr.charAt(tempStr.length - 1) == ",")
                                    tempStr = tempStr.substring(0, tempStr.length - 1)
                                resultArr.push(tempStr);
                                tempStr = "";
                            }
                        }
                    }
                }
                /* browserManager = BrowserManager.getInstance();
                browserManager.addEventListener(BrowserChangeEvent.URL_CHANGE, showURLDetails);
                browserManager.init("", "Welcome!"); */
            }

            private function showURLDetails(e:BrowserChangeEvent):void
            {
                trace(browserManager.url);
            }
        

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___test_Application1_creationComplete(event:mx.events.FlexEvent):void
{
	init()
}



	//	initialize style defs for test

	mx_internal var _test_StylesInit_done:Boolean = false;

	mx_internal function _test_StylesInit():void
	{
		//	only add our style defs to the style manager once
		if (mx_internal::_test_StylesInit_done)
			return;
		else
			mx_internal::_test_StylesInit_done = true;
			
		var style:CSSStyleDeclaration;
		var effects:Array;
			        

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

		styleManager.initProtoChainRoots();
	}


    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
