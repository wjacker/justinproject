
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      testExp
 *  Source:     C:\Documents and Settings\Justin wang\Adobe Flash Builder 4\RegTest\src\testExp.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2011.03.14 10:45:02 GMT+08:00
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.controls.Button;
import mx.controls.Label;
import mx.controls.TextInput;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IFlexModuleFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.styles.*;


[Frame(extraClass="_testExp_FlexInit")]

[Frame(factoryClass="_testExp_mx_managers_SystemManager")]


//  begin class def
public class testExp
    extends mx.core.Application
{

    //  instance variables
    [Bindable]
	/**
 * @private
 **/
    public var input : mx.controls.TextInput;

    [Bindable]
	/**
 * @private
 **/
    public var outupt : mx.controls.Label;

    [Bindable]
	/**
 * @private
 **/
    public var veriableInput : mx.controls.TextInput;


    //  type-import dummies


    //  Container document descriptor
private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Label
        ,
        propertiesFactory: function():Object { return {
          text: "Expression Input:",
          x: 67,
          y: 11
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.TextInput
        ,
        id: "input"
        ,
        propertiesFactory: function():Object { return {
          x: 179,
          y: 9,
          text: "slade(a,b)"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Label
        ,
        propertiesFactory: function():Object { return {
          text: "Veriable Input:",
          x: 67,
          y: 51
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.TextInput
        ,
        id: "veriableInput"
        ,
        propertiesFactory: function():Object { return {
          x: 179,
          y: 49,
          text: "a:15,b:16,c:1"
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Label
        ,
        id: "outupt"
        ,
        propertiesFactory: function():Object { return {
          x: 179,
          y: 96
        }}
      })
    ,
      new mx.core.UIComponentDescriptor({
        type: mx.controls.Button
        ,
        events: {
          click: "___testExp_Button1_click"
        }
        ,
        propertiesFactory: function():Object { return {
          label: "Calculator",
          x: 67,
          y: 96
        }}
      })
    ]
  }}
})

    //  constructor (Flex display object)
    /**
     * @private
     **/
    public function testExp()
    {
        super();

        mx_internal::_document = this;




        // layer initializers

       
        // properties
        this.layout = "absolute";


        // events




    }

    /**
     * @private
     **/ 
    private var __moduleFactoryInitialized:Boolean = false;

    /**
     * @private
     * Override the module factory so we can defer setting style declarations
     * until a module factory is set. Without the correct module factory set
     * the style declaration will end up in the wrong style manager.
     **/ 
    override public function set moduleFactory(factory:IFlexModuleFactory):void
    {
        super.moduleFactory = factory;
        
        if (__moduleFactoryInitialized)
            return;

        __moduleFactoryInitialized = true;


        // our style settings


        // ambient styles
        mx_internal::_testExp_StylesInit();

                         
    }
 
    //  initialize()
    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


    //  scripts
    //  <Script>, line 5 - 35

            import com.justin.validator.ExpressionValidator;
            private var ev:ExpressionValidator = new ExpressionValidator();

            private function calculatorExpress():void
            {
            	try
            	{
                    var obj:Object = new Object();
                    var s:String = veriableInput.text.replace(/ /g, "");
                    var result:Array = s.split(",");
                    for each(var veriable:String in result)
                    {
                        if(veriable != "")
                        {
                            var splitS:Array = veriable.split(":");
                            obj[splitS[0]] = splitS[1];
                        }
                    }
                    var expressStr:String = input.text.replace(/ /g, "");
                    outupt.text = ev.eval(expressStr, obj) + "";


            	}
            	catch(e:Error)
            	{
            		outupt.text = "Eval Error";

            	}
            }
		

    //  end scripts


    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function ___testExp_Button1_click(event:flash.events.MouseEvent):void
{
	calculatorExpress()
}



	//	initialize style defs for testExp

	mx_internal var _testExp_StylesInit_done:Boolean = false;

	mx_internal function _testExp_StylesInit():void
	{
		//	only add our style defs to the style manager once
		if (mx_internal::_testExp_StylesInit_done)
			return;
		else
			mx_internal::_testExp_StylesInit_done = true;
			
		var style:CSSStyleDeclaration;
		var effects:Array;
			        

        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;

		styleManager.initProtoChainRoots();
	}


    //  embed carrier vars
    //  end embed carrier vars


//  end class def
}

//  end package def
}
